plugins {
    id 'java'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
}

group = 'com.sparta'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral() // Maven Central Repository
    // jcenter() // 필요한 경우 JCenter 추가
}


dependencies {
    // Core Dependencies
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-webflux' // WebFlux 기반 비동기 처리
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc' // R2DBC
    implementation 'io.asyncer:r2dbc-mysql:1.0.2'
    implementation 'io.projectreactor.netty:reactor-netty:1.0.27'
    implementation platform('io.netty:netty-bom:4.1.86.Final')
    implementation 'io.netty:netty-transport'
    implementation("io.r2dbc:r2dbc-pool:1.0.0.RELEASE")

    // Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
//    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6' // 사용 시 WebMvc 필요

    // Validation and Swagger
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    // Cloud & Gateway
    implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    // Utilities
    implementation 'org.springframework.boot:spring-boot-starter-data-redis' // Redis
    implementation 'io.github.cdimascio:java-dotenv:5.2.2' // .env 지원
    implementation 'org.springframework.boot:spring-boot-devtools' // 개발 편의성

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Resilience4j
    implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.0.2'
    implementation 'io.github.resilience4j:resilience4j-circuitbreaker:2.0.2'
    implementation 'io.github.resilience4j:resilience4j-retry:2.0.2'
    implementation 'io.github.resilience4j:resilience4j-timelimiter:2.0.2'

    // Mail
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2022.0.4"             // Spring Cloud BOM 설정
    }
}
tasks.named('test') {
    useJUnitPlatform()
}
jar {
    archiveBaseName = 'api'                                                                 // JAR 파일 기본 이름 설정
    archiveClassifier = ''                                                                  // 분류자 제거
    enabled = true
}
tasks.named('bootJar') {
    enabled = true
}