plugins {
    id 'java'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
}

group = 'com.sparta'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}
springBoot {
    mainClass = 'com.sparta.application.Application'
}
repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" } // Milestone 버전이 필요한 경우
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign' // Feign Client
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client' // 서비스 등록 및 발견
    implementation 'org.springframework.boot:spring-boot-starter-validation' // 데이터 검증
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.boot:spring-boot-starter-mail' // 메일 전송 의존성
    implementation project(':UserService:domain') // domain 모듈을 의존성으로 추가

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2022.0.4"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
jar {
    archiveBaseName = 'app'    // JAR 파일 기본 이름 설정
    archiveClassifier = ''             // 분류자 제거
    enabled = true
}
tasks.named('bootJar') {
    enabled = false
}